{"version":3,"sources":["services/index.js","hooks/context.js","services/portfolio.js","components/TablePortfolio.js","components/Upload.js","components/PortfoliosList.js","components/AllPortfolios.js","pages/Home.js","components/404/NotFound.js","components/Sider.js","components/Layout.js","pages/Login.js","Router.js","serviceWorker.js","index.js"],"names":["authService","axios","create","baseURL","withCredentials","loginFn","userInfo","post","currentUserFn","get","logoutFn","DataContext","createContext","DataCtxProvider","props","useState","user","setUser","useEffect","a","data","login","getSessionData","value","logout","addProfilePic","img","Provider","useContextData","useContext","portfolioService","getUserPortfolios","portfolioCreate","portfolioUpdate","id","portfolio","put","Text","Typography","EditableContext","React","EditableRow","index","Form","useForm","form","component","EditableCell","title","editable","children","dataIndex","record","handleSave","restProps","editing","setEditing","inputRef","useRef","current","focus","toggleEdit","setFieldsValue","save","validateFields","values","console","log","childNode","Item","style","margin","name","rules","required","message","ref","onPressEnter","onBlur","className","paddingRight","onClick","replaceCommas","string","replace","findValue","o","prop","hasOwnProperty","TablePortfolio","tableData","settableData","totalPosition","setTotalPosition","change","setChange","dataArray","forEach","e","Currency","validateCurrency","CSVData","res","position","parseFloat","Price","FXRate","Holding","getTotalPostition","sessionStorage","setItem","JSON","stringify","_id","updatePortfolio","row","newData","findIndex","item","key","splice","components","body","cell","columns","header","map","col","onCell","marginTop","justify","k","length","addedRow","type","marginBottom","fileName","rowClassName","bordered","dataSource","pagination","pageSize","Upload","csvfile","tShirts","felpe","state","setState","parse","getItem","csvData","setcsvData","updateData","result","file","headers","Object","keys","push","i","newPortfolio","placeholder","onChange","event","target","files","preventDefault","Papa","dynamicTyping","complete","PortfoliosList","initLoading","setInitLoading","setData","list","setList","getPortfolios","handleEdit","window","location","reload","handleDelete","indexOf","filter","idx","loading","itemLayout","renderItem","actions","avatar","active","Meta","AllPortfolios","isModalVisible","setIsModalVisible","showModal","visible","onOk","onCancel","Title","Home","sm","level","to","NotFound","Sider","Menu","SubMenu","Layout","SiderMenu","history","clear","width","mode","height","borderRight","icon","LogoutOutlined","Header","Content","LayoutApp","minHeight","padding","align","textAlign","backgroundColor","errormessage","errmessage","error","Login","userInput","then","catch","err","errorInfo","response","flex","layout","onFinish","label","Password","block","htmlType","Router","exact","path","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.510f2ce8.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseURL = process.env.NODE_ENV === 'development' ?\n  `http://localhost:3000/` : '/'\n  // /routes/auth\n\nconst authService = axios.create({\n  baseURL,\n  withCredentials: true\n})\n\nexport const signupFn = userInfo =>\n  authService.post('/signup', userInfo)\n\nexport const loginFn = userInfo =>\n  authService.post('/login', userInfo)\n\nexport const userDetails= () => \n  authService.get(`/profile`)\n\nexport const currentUserFn = () =>\n  authService.get('/current-user')\n\nexport const logoutFn = () =>\n  authService.get('/logout')","import React,{ useState, createContext, useContext, useEffect } from 'react'\nimport { currentUserFn } from '../services/index'\n\nexport const DataContext = createContext()\n\nexport const DataCtxProvider = props => {\n    const [user, setUser] = useState(null)\n\n    useEffect(() => {\n        async function getSessionData() {\n            const { data } = await currentUserFn()\n            login(data);\n        }\n        getSessionData()\n    }, [])\n\n    const login = userInfo => {\n        setUser(userInfo)\n\n    }\n\n    const logout = () => {\n        setUser(null)\n    }\n\n    const addProfilePic= img => setUser({...user, img})\n\n    const value = { user, login, logout, addProfilePic }\n\n    return (\n        // DataContext.Provider\n        <DataContext.Provider {...props} value={value} />\n    )\n}\n\n// useContextData goes to components\nexport const useContextData = () => useContext(DataContext)","import axios from 'axios'\n\nconst baseURL = process.env.NODE_ENV === 'development' ?\n  `http://localhost:3000/` : '/'\n\nconst portfolioService = axios.create({\n  baseURL,\n  withCredentials: true\n})\n// export service-functions to target page\n\n// get all\nexport const getUserPortfolios = () => \nportfolioService.get(`/user-portfolios`)\n\n// details\nexport const getPortfolioDetails = (_id) => \nportfolioService.get(`/portfolio/${_id}`)\n\n// create\nexport const portfolioCreate = data => \nportfolioService.post('/new-portfolio', data)\n\n// edit-update\nexport const portfolioUpdate = (id, portfolio) => \nportfolioService.put(`/edit/${id}`, portfolio)\n\n//delete\nexport const portfolioDelete = id => \nportfolioService.get(`/delete/${id}`)","import React, { useContext, useState, useEffect, useRef } from 'react';\nimport { Table, Input, Button, Popconfirm, Form, Col, Row, Typography } from 'antd';\nimport axios from 'axios'\nimport { portfolioUpdate } from '../services/portfolio';\n\nconst {Text}=Typography\n\nconst EditableContext = React.createContext(null);\n\nconst EditableRow = ({ index, ...props }) => {\n    const [form] = Form.useForm();\n    return (\n      <Form form={form} component={false}>\n        <EditableContext.Provider value={form}>\n          <tr {...props} />\n        </EditableContext.Provider>\n      </Form>\n    );\n  };\n\n  const EditableCell = ({\n    title,\n    editable,\n    children,\n    dataIndex,\n    record,\n    handleSave,\n    ...restProps\n  }) => {   \n    const [editing, setEditing] = useState(false);\n    const inputRef = useRef(null);\n    const form = useContext(EditableContext);\n    useEffect(() => {\n      if (editing) {\n        inputRef.current.focus();\n      }\n    }, [editing]);\n\n    const toggleEdit = () => {\n        setEditing(!editing);\n        form.setFieldsValue({\n          [dataIndex]: record[dataIndex],\n        });\n      };\n\n      const save = async () => {\n        try {\n          const values = await form.validateFields();\n          toggleEdit();\n          handleSave({ ...record, ...values });\n        } catch (errInfo) {\n          console.log('Save failed:', errInfo);\n        }\n      };\n  \nlet childNode = children;\n\nif (editable) {\nchildNode = editing ? (\n  <Form.Item\n    style={{\n      margin: 0,\n    }}\n    name={dataIndex}\n    rules={[\n      {\n        required: true,\n        message: `${title} is required.`,\n      },\n    ]}\n  >\n    <Input ref={inputRef} onPressEnter={save} onBlur={save} />\n  </Form.Item>\n) : (\n  <div\n    className=\"editable-cell-value-wrap\"\n    style={{\n      paddingRight: 24,\n    }}\n    onClick={toggleEdit}\n  >\n    {children}\n    </div>\n);\n}\n\nreturn <td {...restProps}>{childNode}</td>;\n};\n\nfunction replaceCommas(string) {\n    const searchRegExp = /,/g;\n    const replaceWith = '.';\n    if(typeof string ===\"string\"){\n        string= string.replace(searchRegExp, replaceWith);\n    }\n      return string\n  }\n  \n  function findValue(o, value) {\n    for (var prop in o) {\n        if (o.hasOwnProperty(prop) && o[prop] === value) {\n            return value;\n        }\n    }\n    return null;\n}\n\n\nfunction TablePortfolio({data}) {\n\n    console.log(data)\n    const [tableData, settableData] = useState()\n    const [totalPosition, setTotalPosition] = useState()\n    const [change, setChange] = useState(false)\n\n\n\n\nuseEffect(() => {\n    async function validateCurrency(dataArray){\n        const { data } = await axios.get(\"https://openexchangerates.org/api/currencies.json\")\n        if(dataArray){\n            dataArray.forEach(e=>{\n                console.log(e.Currency)\n                if(data.hasOwnProperty(e.Currency)){\n                    e.Currency=data[e.Currency]\n                }\n                else if(findValue(data, e.Currency)){\n                    e.Currency=findValue(data, e.Currency)\n                    \n                }else{\n                    e.Currency=\"Not_a_currency\"\n                }\n            })\n            settableData(dataArray)\n        }\n    }\n    \n\n    validateCurrency(data.CSVData)\n}, [data.CSVData])\n\nuseEffect(() => {\n    function getTotalPostition(dataArray){\n        if(tableData){\n            console.log(\"algo paso aqui tambien\")\n            let res=0\n            dataArray.forEach(e=>{\n                const position=parseFloat(replaceCommas(e.Price))*parseFloat(replaceCommas(e.FXRate))*e.Holding\n                res=res+position\n            })\n            setTotalPosition(res)\n            \n        }\n        }\n\n    getTotalPostition(tableData)\n}, [tableData])\n\nuseEffect(() => {\nasync function updatePortfolio(){\n    if(change){\n        data.CSVData=tableData\n        sessionStorage.setItem('csvFile',  JSON.stringify(data));\n        const {_id,\n      ...values}=data\n      console.log(_id)\n      console.log(values)\n        await portfolioUpdate(_id, values)\n        setChange(false)\n      \n    }\n\n}\nupdatePortfolio() \n  }, [tableData, data, change]);\n// data.header.push(      {\n//     title: 'operation',\n//     dataIndex: 'operation',\n//     render: (_, record) =>\n//       data.CSVData.length >= 1 ? (\n//         <Popconfirm title=\"Sure to delete?\" onConfirm={() => handleDelete(record.key)}>\n//           <a>Delete</a>\n//         </Popconfirm>\n//       ) : null,\n//   },)\n\n\n//  const handleDelete = (key) => {\n//       data.CSVData= data.CSVData.filter((item) => item.key !== key)\n//   };\nconst handleAdd = () => {\n    let newData={}\n    for (let k in data.CSVData[0]){\n        if(k===\"key\"){\n            newData[k]=tableData.length\n        } else if(k===\"Price\"|| k===\"Holding\" || k===\"FXRate\"){\n            newData[k]=0\n        } else {\n            newData[k]=\"new_row\"\n        }\n    }\n    \n      const addedRow = [...tableData, newData]\n      settableData(addedRow)\n  };\n  const handleSave = async (row) => {\n      const newData=[...tableData]\n      const index=newData.findIndex((item)=>row.key===item.key)\n      const item=newData[index]\n      newData.splice(index, 1, {...item, ...row})\n      settableData(newData)\n      setChange(true)\n  };\n\n    const components = {\n        body: {\n          row: EditableRow,\n          cell: EditableCell,\n        },\n      };\n      const columns = data.header.map((col) => {\n        if (!col.editable) {\n          return col;\n        }\n        return {\n            ...col,\n            onCell: (record) => ({\n              record,\n              editable: col.editable,\n              dataIndex: col.dataIndex,\n              title: col.title,\n              handleSave: handleSave,\n            }),\n          };\n        });      \n\n\n\n    return (\n        \n        <div>\n             <div style={{marginTop:\"15px\"}}>\n                 <Row justify=\"space-between\">\n                     <Col>\n        <Button\n          onClick={handleAdd}\n          type=\"primary\"\n          style={{\n            marginBottom: 16,\n          }}\n        >\n          Add a row\n        </Button>\n        </Col>\n        <Col>\n        <Text>Name of Portfolio: {data.fileName}</Text>\n        </Col>\n        <Col>\n        {totalPosition ?\n        <Text>Total portfolio value kr {totalPosition}</Text>        \n    :\n    null}\n        \n        </Col>\n        </Row>\n        {tableData ?\n                <Table\n                components={components}\n                rowClassName={() => 'editable-row'}\n                bordered\n                dataSource={tableData}\n                columns={columns}\n                pagination={{pageSize:50}}\n              />\n        :\n        null\n    }\n\n      </div>\n            \n        </div>\n    )\n}\n\nexport default TablePortfolio\n","import React, {useState, useEffect} from 'react'\nimport Papa from 'papaparse'\nimport {Col, Row, Typography, Button, Input} from 'antd'\nimport { portfolioCreate } from '../services/portfolio';\n\nimport _, { result } from \"lodash\";\nimport Title from 'antd/lib/skeleton/Title';\nimport TablePortfolio from './TablePortfolio';\n\nconst Upload = () => {\n    const [state, setState] = useState({\n      csvfile: null,\n      tShirts: [null],\n      felpe: [null]\n    });\n\n    const [csvData, setcsvData] = useState(\n      JSON.parse(sessionStorage.getItem('csvFile')) || ''\n    );\n\n\n    function handleChange(event) {\n      setState({\n        csvfile: event.target.files[0]\n      });\n    }\n  \n    function importCSV(e) {\n      e.preventDefault();\n      const { csvfile } = state;\n  \n      csvfile &&\n        Papa.parse(csvfile, {\n          header: true,\n          dynamicTyping: true,\n          complete: updateData\n        });\n\n    }\n\n    async function updateData(result, file) {\n      setState({\n        csvfile: null\n      });\n      var data = result.data;\n\n\n      const headers=Object.keys(data[0])\n      let columns=[]\n      let dataSource=[]\n      headers.forEach(e => {\n        columns.push({\n          title:e,\n          dataIndex:e,\n          editable:true\n        })\n      });\n      for(let i=0;i<data.length;i++){\n        data[i]['key']=i\n        dataSource.push(data[i])\n      }\n      console.log(dataSource)\n      const res={\n        fileName:file.name,\n      header:columns,\n      CSVData:dataSource\n    }\n\n    const newPortfolio= await portfolioCreate(res)\n    console.log(newPortfolio)\n    res._id=newPortfolio.data._id\n    setcsvData(res)\n    console.log(res)\n    }\n\n    useEffect(() => {\n      if(csvData){\n        sessionStorage.setItem('csvFile',  JSON.stringify(csvData));\n      }\n      console.log(csvData)\n    }, [csvData]);\n\n    console.log(sessionStorage)\n  \n    return (\n      <div>\n        <div className=\"upload\">\n          <Input\n            type=\"file\"\n            name=\"file\"\n            placeholder={null}\n            onChange={handleChange}\n          />\n          \n          <p />\n          \n          <Button onClick={importCSV} type=\"primary\">Upload a CSV File</Button>\n        </div>\n        {csvData ?\n<TablePortfolio data={csvData}/>\n        :\n        null\n        }\n      </div>\n    );\n  };\n  \n  export default Upload;","import React, { useEffect, useState } from 'react'\nimport {getUserPortfolios, getPortfolioDetails, portfolioDelete} from '../services/portfolio'\nimport { List,  Button, Skeleton } from 'antd';\n\nfunction PortfoliosList() {\n    const [initLoading, setInitLoading] = useState(true)\n    const [loading, setLoading] = useState(false)\n    const [data, setData] = useState([])\n    const [list, setList] = useState([])\n\n    useEffect(() => {\n        async function getPortfolios(){\n            setInitLoading(false)\n            const {data} = await getUserPortfolios()\n            console.log(data)\n            setData(data)\n            setList(data)\n        }\n        getPortfolios()\n    }, [])\n\n    const handleEdit = async(id)=>{\n        console.log(id)\n        const {data}= await getPortfolioDetails(id)\n        sessionStorage.setItem('csvFile', JSON.stringify(data))\n        window.location.reload()\n        console.log(data)\n    }\n\n    const handleDelete = async(item)=>{\n        console.log(item)\n        const {data}= await portfolioDelete(item._id)\n        const index=list.indexOf(item)\n        const newData= list.filter((data, idx) => idx !== index )\n        setList(newData)\n    }\n\n    return (\n        <div>\n             <List\n        className=\"demo-loadmore-list\"\n        loading={initLoading}\n        itemLayout=\"horizontal\"\n        // loadMore={loadMore}\n        dataSource={list}\n        renderItem={item => (\n          <List.Item\n            actions={[<Button type=\"link\" key=\"list-loadmore-edit\" onClick={()=>handleEdit(item._id)} >edit</Button>, \n            <Button type=\"link\" key=\"list-loadmore-more\" onClick={()=>handleDelete(item)}>delete</Button>]}\n          >\n            <Skeleton avatar title={false} loading={item.loading} active>\n              <List.Item.Meta\n                title={<p>{item.fileName}</p>}\n              />\n\n            </Skeleton>\n          </List.Item>\n                  )}\n                  />\n            \n        </div>\n    )\n}\n\nexport default PortfoliosList\n","import React, { useState } from 'react';\nimport { Modal, Button } from 'antd';\nimport PortfoliosList from './PortfoliosList';\n\nfunction AllPortfolios() {\n\n    const [isModalVisible, setIsModalVisible] = useState(false);\n\n    const showModal = async () => {\n        await\n      setIsModalVisible(true);\n    };\n  \n    const handleOk = () => {\n      setIsModalVisible(false);\n    };\n  \n    const handleCancel = () => {\n      setIsModalVisible(false);\n    };\n  \n    return (\n        <div>\n                  <Button type=\"primary\" onClick={showModal}>\n        View All Portfolios\n      </Button>\n      <Modal title=\"Basic Modal\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\n          <PortfoliosList/>\n      </Modal>\n            \n        </div>\n    )\n}\n\nexport default AllPortfolios\n","import React from 'react'\nimport {Col, Row, Typography, Button} from 'antd'\nimport { useContextData } from '../hooks/context';\nimport { Redirect} from 'react-router-dom'\nimport Upload from '../components/Upload';\nimport AllPortfolios from '../components/AllPortfolios';\n\nconst {Title}=Typography\nfunction Home() {\n    const { user } = useContextData()\n    // console.log(user)\n\n    return user ? (\n    // return(\n        \n        <div>\n            \n\n<Row>\n<Col sm={24}>\n\n    <Title level={1}> Welcome to the Portfolio Viewer App</Title>\n    <Title level={2}> Please upload a portfolio as a CSV file, look at your previous portfolios or choose one from the sider to view the detail and be able to edit</Title>\n    <AllPortfolios/>\n    <br/>\n    <Upload/>\n    <br/>\n</Col>\n</Row>\n\n        </div>\n    )\n     :<Redirect to={\"/\"}/>\n}\n\nexport default Home\n","import React from 'react';\n\nfunction NotFound() {\n  return (\n    <div>\n      <h2>Not found</h2>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React, { useState } from 'react'\nimport { Layout, Menu } from 'antd';\nimport {\n    UserOutlined,\n    LaptopOutlined,\n    NotificationOutlined,\n    TableOutlined,\n    LogoutOutlined,\n    AreaChartOutlined\n} from '@ant-design/icons';\nimport { Link } from 'react-router-dom';\nimport { useContextData } from '../hooks/context'\nimport { logoutFn } from '../services/index'\n// import { useContextData } from '../hooks/context'\n\nconst { SubMenu } = Menu;\n\n\nconst { Sider } = Layout;\n\n\nfunction SiderMenu({history}) {\n\nconst { user, logout } = useContextData()\n\nasync function handleLogout() {\n  await logoutFn()\n  sessionStorage.clear()\n  logout()\n\n}\n    \n    return (\n        <Sider width={200} className=\"site-layout-background\">\n        <Menu\n          mode=\"inline\"\n          style={{ height: '100%', borderRight: 0 }}\n        >\n          <Menu.Item key=\"1\" icon={<LogoutOutlined />} onClick={handleLogout}>\n                    Logout\n            </Menu.Item>\n        </Menu>\n      </Sider>\n    )\n\n}\n\nexport default SiderMenu","import React, { useEffect } from 'react'\nimport { Layout, Row, Col} from 'antd';\nimport SiderMenu from './Sider'\n// import { useContextData } from '../hooks/context';\n\nimport { Redirect} from 'react-router-dom'\n\nconst { Header, Content} = Layout;\n\nfunction LayoutApp({children}) {\n\n\n\n    return (\n      <>\n      \n      <Layout style={{ minHeight: '100vh' }}>\n      <Header className=\"site-layout-background\" style={{ padding: 0}}>\n      </Header>\n      <Layout className=\"site-layout\">\n      <SiderMenu/>\n        <Row justify=\"end\" align=\"middle\" style>\n        </Row>\n        <Content style={{ margin: '0 16px', textAlign:\"left\" }}>\n          <div className=\"site-layout-background\" \n          style={{ padding: 24, minHeight: 360, backgroundColor:\"white\" }}>\n            {children}\n          </div>\n        </Content>\n      </Layout>\n    </Layout>\n    {/* :\n    <Redirect to={'/login'}/> */}\n    {/* } */}\n\n      </>\n    )\n}\n\n\nexport default LayoutApp\n","import React,{ useState, createContext, useContext, useEffect } from 'react'\nimport { Col, Row, Input, Form, Button, message, Typography } from 'antd'\nimport { loginFn } from '../services/index'\nimport { useContextData } from '../hooks/context'\nimport { Redirect } from 'react-router'\n\nconst errormessage=(errmessage)=>{\n  message.error(errmessage)\n}\n\nconst {Title}=Typography\n\n\nfunction Login({history}) {\n\n    const [form] = Form.useForm()\n    const { login, user } = useContextData()\n  \n  \n    async function handleSubmit(userInput) {\n\n        console.log(userInput)\n      loginFn(userInput)\n      .then(data => {\n        login({ data })\n        history.push('/home')\n      })\n      .catch(err => {\n        const errorInfo = err.response.data.message\n        errormessage(errorInfo)\n      })\n\n  }\nreturn  user ?\n  <Redirect to={\"/home\"}/>\n  :\n(\n    // <div style={{\n    //     // backgroundColor:\"yellow\",\n    // backgroundImage:\"url(https://img.rawpixel.com/s3fs-private/rawpixel_images/website_content/rm218-bb-01_1.jpg?w=800&dpr=1&fit=default&crop=default&q=65&vib=3&con=3&usm=15&bg=F4F4F3&ixlib=js-2.2.1&s=7e342c655542531730ffb8c14dbae12b)\", backgroundSize: \"cover\",\n    // height: \"100vh\"}}>\n    <div>\n      <Row align=\"middle\" justify=\"space-around\">\n        <Col flex=\"center\">\n        </Col>\n\n      </Row>\n      <Row align=\"middle\" justify=\"space-around\">\n        <Col flex=\"center\">\n        <Title level={1}>Welcome to the Portfolio Viewer App</Title>\n          <Form layout=\"vertical\" form={form} onFinish={handleSubmit}>\n            <Form.Item name='email' label=\"Email:\" rules={[{ required: true, type: 'email', message: 'please input your email' }]}>\n              <Input />\n            </Form.Item>\n            <Form.Item name='password' label=\"Password:\" rules={[{ required: true, message: 'password is required' }]}>\n              <Input.Password />\n            </Form.Item>\n            <Button type=\"primary\" block htmlType=\"submit\">\n              Login\n            </Button>\n\n          </Form>\n        </Col>\n\n      </Row>\n\n    </div>\n    // </div>\n  )\n}\nexport default Login\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport NotFound from './components/404/NotFound.js';\nimport LayoutApp from './components/Layout'\nimport Login from './pages/Login';\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={Login} />\n      <LayoutApp>\n        <Route exact path=\"/home\" component={Home} />\n        <Route exact path=\"/profile\" component={Home} />\n      </LayoutApp>\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Router from './Router';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\nimport { DataCtxProvider } from './hooks/context'\n\nReactDOM.render(\n    <DataCtxProvider>\n        <Router />\n    </DataCtxProvider>\n    , document.getElementById('root'));\n    \n\nserviceWorker.unregister();\n"],"sourceRoot":""}