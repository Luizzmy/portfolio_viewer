{"version":3,"sources":["services/index.js","hooks/context.js","services/portfolio.js","components/TablePortfolio.js","components/Upload.js","components/PortfoliosList.js","components/AllPortfolios.js","components/Sider.js","components/Layout.js","pages/Home.js","components/404/NotFound.js","pages/Login.js","Router.js","serviceWorker.js","index.js"],"names":["authService","axios","create","baseURL","withCredentials","loginFn","userInfo","post","currentUserFn","get","logoutFn","DataContext","createContext","DataCtxProvider","props","useState","user","setUser","useEffect","a","data","login","getSessionData","value","logout","addProfilePic","img","Provider","useContextData","useContext","portfolioService","getUserPortfolios","portfolioCreate","portfolioUpdate","id","portfolio","put","Text","Typography","EditableContext","React","EditableRow","index","Form","useForm","form","component","EditableCell","title","editable","children","dataIndex","record","handleSave","restProps","editing","setEditing","inputRef","useRef","current","focus","toggleEdit","setFieldsValue","save","validateFields","values","console","log","childNode","Item","style","margin","name","rules","required","message","ref","onPressEnter","onBlur","className","paddingRight","onClick","replaceCommas","string","replace","findValue","o","prop","hasOwnProperty","TablePortfolio","tableData","settableData","totalPosition","setTotalPosition","change","setChange","dataArray","forEach","e","Currency","validateCurrency","CSVData","res","position","parseFloat","Price","FXRate","Holding","getTotalPostition","sessionStorage","setItem","JSON","stringify","_id","updatePortfolio","row","newData","findIndex","item","key","splice","components","body","cell","columns","header","map","col","onCell","marginTop","justify","k","length","addedRow","type","marginBottom","fileName","rowClassName","bordered","dataSource","pagination","pageSize","Upload","csvfile","tShirts","felpe","state","setState","parse","getItem","csvData","setcsvData","updateData","result","file","headers","Object","keys","push","i","newPortfolio","placeholder","onChange","event","target","files","preventDefault","Papa","dynamicTyping","complete","PortfoliosList","initLoading","setInitLoading","list","setList","getPortfolios","handleEdit","window","location","reload","handleDelete","indexOf","filter","idx","loading","itemLayout","renderItem","actions","avatar","active","Meta","AllPortfolios","isModalVisible","setIsModalVisible","visible","onOk","onCancel","Sider","Layout","SiderMenu","clear","width","mode","height","borderRight","icon","LogoutOutlined","Header","Content","LayoutApp","minHeight","padding","align","textAlign","backgroundColor","Title","Home","sm","level","to","NotFound","errormessage","errmessage","error","Login","history","userInput","then","catch","err","xs","md","flex","layout","onFinish","label","Password","block","htmlType","Router","exact","path","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7d18197f.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseURL = process.env.NODE_ENV === 'development' ?\n  `http://localhost:3000/` : '/'\n  // /routes/auth\n  ///Authentication routes, the baseURL assumes build folder will be in backend folder\n\nconst authService = axios.create({\n  baseURL,\n  withCredentials: true\n})\n\nexport const signupFn = userInfo =>\n  authService.post('/signup', userInfo)\n\nexport const loginFn = userInfo =>\n  authService.post('/login', userInfo)\n\nexport const userDetails= () => \n  authService.get(`/profile`)\n\nexport const currentUserFn = () =>\n  authService.get('/current-user')\n\nexport const logoutFn = () =>\n  authService.get('/logout')","import React,{ useState, createContext, useContext, useEffect } from 'react'\nimport { currentUserFn } from '../services/index'\n\nexport const DataContext = createContext()\n\nexport const DataCtxProvider = props => {\n    const [user, setUser] = useState(null)\n\n    useEffect(() => {\n        async function getSessionData() {\n            const { data } = await currentUserFn()\n            login(data);\n        }\n        getSessionData()\n    }, [])\n\n    const login = userInfo => {\n        setUser(userInfo)\n\n    }\n\n    const logout = () => {\n        setUser(null)\n    }\n\n    const addProfilePic= img => setUser({...user, img})\n\n    const value = { user, login, logout, addProfilePic }\n\n    return (\n        // DataContext.Provider\n        <DataContext.Provider {...props} value={value} />\n    )\n}\n\n// useContextData goes to components\nexport const useContextData = () => useContext(DataContext)","import axios from 'axios'\n\nconst baseURL = process.env.NODE_ENV === 'development' ?\n  `http://localhost:3000/` : '/'\n\n  /// Portfolio routes, baseURL assumes build folder will be saved in backend folder\nconst portfolioService = axios.create({\n  baseURL,\n  withCredentials: true\n})\n\n////Portfolio CRUD\n// get all\nexport const getUserPortfolios = () => \nportfolioService.get(`/user-portfolios`)\n\n// details \nexport const getPortfolioDetails = (_id) => \nportfolioService.get(`/portfolio/${_id}`)\n\n// create\nexport const portfolioCreate = data => \nportfolioService.post('/new-portfolio', data)\n\n// edit-update\nexport const portfolioUpdate = (id, portfolio) => \nportfolioService.put(`/edit/${id}`, portfolio)\n\n//delete\nexport const portfolioDelete = id => \nportfolioService.get(`/delete/${id}`)","import React, { useContext, useState, useEffect, useRef } from 'react';\nimport { Table, Input, Button, Form, Col, Row, Typography } from 'antd';\nimport axios from 'axios'\nimport { portfolioUpdate } from '../services/portfolio';\n\nconst { Text } = Typography\n\n/// Section of editable components for table\nconst EditableContext = React.createContext(null);\n\nconst EditableRow = ({ index, ...props }) => {\n  \n  const [form] = Form.useForm();\n\n  return (\n    <Form form={form} component={false}>\n      <EditableContext.Provider value={form}>\n        <tr {...props} />\n      </EditableContext.Provider>\n    </Form>\n  );\n};\n\nconst EditableCell = ({\n  title,\n  editable,\n  children,\n  dataIndex,\n  record,\n  handleSave,\n  ...restProps\n}) => {\n  const [editing, setEditing] = useState(false);\n  const inputRef = useRef(null);\n  const form = useContext(EditableContext);\n  useEffect(() => {\n    if (editing) {\n      inputRef.current.focus();\n    }\n  }, [editing]);\n\n  const toggleEdit = () => {\n    setEditing(!editing);\n    form.setFieldsValue({\n      [dataIndex]: record[dataIndex],\n    });\n  };\n\n  const save = async () => {\n    try {\n      const values = await form.validateFields();\n      toggleEdit();\n      handleSave({ ...record, ...values });\n    } catch (errInfo) {\n      console.log('Save failed:', errInfo);\n    }\n  };\n\n  let childNode = children;\n\n  if (editable) {\n    childNode = editing ? (\n      <Form.Item\n        style={{\n          margin: 0,\n        }}\n        name={dataIndex}\n        rules={[\n          {\n            required: true,\n            message: `${title} is required.`,\n          },\n        ]}\n      >\n        <Input ref={inputRef} onPressEnter={save} onBlur={save} />\n      </Form.Item>\n    ) : (\n      <div\n        className=\"editable-cell-value-wrap\"\n        style={{\n          paddingRight: 24,\n        }}\n        onClick={toggleEdit}\n      >\n        {children}\n      </div>\n    );\n  }\n  return <td {...restProps}>{childNode}</td>;\n};\n\n///Function for replacing commas in CSV file for numbers coming as strings\nfunction replaceCommas(string) {\n  const searchRegExp = /,/g;\n  const replaceWith = '.';\n  if (typeof string === \"string\") {\n    string = string.replace(searchRegExp, replaceWith);\n  }\n  return string\n}\n\n\n/// Finds value perviously validated in the currency API\nfunction findValue(o, value) {\n  for (var prop in o) {\n    if (o.hasOwnProperty(prop) && o[prop] === value) {\n      return value;\n    }\n  }\n  return null;\n}\n\nfunction TablePortfolio({ data }) {\n\n  const [tableData, settableData] = useState()\n  const [totalPosition, setTotalPosition] = useState()\n  const [change, setChange] = useState(false)\n\n  useEffect(() => {\n\n    ///Hook for validating currency names against openexchange REST API\n    async function validateCurrency(dataArray) {\n      const { data } = await axios.get(\"https://openexchangerates.org/api/currencies.json\")\n      if (dataArray) {\n        dataArray.forEach(e => {\n          if (data.hasOwnProperty(e.Currency)) {\n            e.Currency = data[e.Currency]\n          }\n          else if (findValue(data, e.Currency)) {\n            e.Currency = findValue(data, e.Currency)\n\n          } else {\n            e.Currency = \"Not_a_currency\"\n          }\n        })\n        settableData(dataArray)\n      }\n    }\n    validateCurrency(data.CSVData)\n  }, [data.CSVData])\n\n  useEffect(() => {\n\n    //Hook for caluclating total position upon changes to the table data\n    function getTotalPostition(dataArray) {\n      if (tableData) {\n        let res = 0\n        dataArray.forEach(e => {\n          const position = parseFloat(replaceCommas(e.Price)) * parseFloat(replaceCommas(e.FXRate)) * e.Holding\n          res = res + position\n        })\n        setTotalPosition(res)\n      }\n    }\n    getTotalPostition(tableData)\n  }, [tableData])\n\n  useEffect(() => {\n\n    ///Currently saving changes in DB upon edits on the table, could add a validation step if required\n    async function updatePortfolio() {\n      if (change) {\n        data.CSVData = tableData\n        sessionStorage.setItem('csvFile', JSON.stringify(data));\n        const { _id,\n          ...values } = data\n        await portfolioUpdate(_id, values)\n        setChange(false)\n      }\n    }\n    updatePortfolio()\n  }, [tableData, data, change]);\n  // data.header.push(      {\n  //     title: 'operation',\n  //     dataIndex: 'operation',\n  //     render: (_, record) =>\n  //       data.CSVData.length >= 1 ? (\n  //         <Popconfirm title=\"Sure to delete?\" onConfirm={() => handleDelete(record.key)}>\n  //           <a>Delete</a>\n  //         </Popconfirm>\n  //       ) : null,\n  //   },)\n\n\n  //  const handleDelete = (key) => {\n  //       data.CSVData= data.CSVData.filter((item) => item.key !== key)\n  //   };\n\n  ////// Function for adding new row to the table, currently added at the bottom, needs to have strings to be able to edit them\n  const handleAdd = () => {\n    let newData = {}\n    for (let k in data.CSVData[0]) {\n      if (k === \"key\") {\n        newData[k] = tableData.length\n      } else if (k === \"Price\" || k === \"Holding\" || k === \"FXRate\") {\n        newData[k] = 0\n      } else {\n        newData[k] = \"new_row\"\n      }\n    }\n\n    const addedRow = [...tableData, newData]\n    settableData(addedRow)\n  };\n\n  ///// Handling changes on table interface data\n  const handleSave = async (row) => {\n    const newData = [...tableData]\n    const index = newData.findIndex((item) => row.key === item.key)\n    const item = newData[index]\n    newData.splice(index, 1, { ...item, ...row })\n    settableData(newData)\n    setChange(true)\n  };\n\n  const components = {\n    body: {\n      row: EditableRow,\n      cell: EditableCell,\n    },\n  };\n\n  const columns = data.header.map((col) => {\n    if (!col.editable) {\n      return col;\n    }\n    return {\n      ...col,\n      onCell: (record) => ({\n        record,\n        editable: col.editable,\n        dataIndex: col.dataIndex,\n        title: col.title,\n        handleSave: handleSave,\n      }),\n    };\n  });\n\n  ///// Renders component\n  return (\n\n    <div>\n      <div style={{ marginTop: \"15px\" }}>\n        <Row justify=\"space-between\">\n          <Col>\n            <Button\n              onClick={handleAdd}\n              type=\"primary\"\n              style={{\n                marginBottom: 16,\n              }}\n            >\n              Add a row\n            </Button>\n          </Col>\n          <Col>\n            <Text>Name of Portfolio: {data.fileName}</Text>\n          </Col>\n          <Col>\n            {totalPosition ?\n              <Text>Total portfolio value kr {totalPosition}</Text>\n              :\n              null}\n          </Col>\n        </Row>\n        {tableData ?\n          <Table\n            components={components}\n            rowClassName={() => 'editable-row'}\n            bordered\n            dataSource={tableData}\n            columns={columns}\n            pagination={{ pageSize: 50 }}\n          />\n          :\n          null\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default TablePortfolio\n","import React, { useState, useEffect } from 'react'\nimport Papa from 'papaparse'\nimport { Button, Input } from 'antd'\nimport { portfolioCreate } from '../services/portfolio';\nimport TablePortfolio from './TablePortfolio';\n\nconst Upload = () => {\n\n  ////// Uploading CSV component, useState and useEffect for storing CSV file in browsers session\n  ////// Formatted for the antd table component to be read\n\n  const [state, setState] = useState({\n    csvfile: null,\n    tShirts: [null],\n    felpe: [null]\n  });\n\n  const [csvData, setcsvData] = useState(\n    JSON.parse(sessionStorage.getItem('csvFile')) || ''\n  );\n\n  function handleChange(event) {\n    setState({\n      csvfile: event.target.files[0]\n    });\n  }\n\n  function importCSV(e) {\n    e.preventDefault();\n    const { csvfile } = state;\n\n    csvfile &&\n      Papa.parse(csvfile, {\n        header: true,\n        dynamicTyping: true,\n        complete: updateData\n      });\n\n  }\n\n  async function updateData(result, file) {\n    setState({\n      csvfile: null\n    });\n    var data = result.data;\n\n\n    const headers = Object.keys(data[0])\n    let columns = []\n    let dataSource = []\n    headers.forEach(e => {\n      columns.push({\n        title: e,\n        dataIndex: e,\n        editable: true\n      })\n    });\n    for (let i = 0; i < data.length; i++) {\n      data[i]['key'] = i\n      dataSource.push(data[i])\n    }\n    console.log(dataSource)\n    const res = {\n      fileName: file.name,\n      header: columns,\n      CSVData: dataSource\n    }\n\n    const newPortfolio = await portfolioCreate(res)\n    res._id = newPortfolio.data._id\n    setcsvData(res)\n  }\n\n  useEffect(() => {\n    if (csvData) {\n      sessionStorage.setItem('csvFile', JSON.stringify(csvData));\n    }\n  }, [csvData]);\n\n  ///Renders table component upon upload\n  return (\n    <div>\n      <div className=\"upload\">\n        <Input\n          type=\"file\"\n          name=\"file\"\n          placeholder={null}\n          onChange={handleChange}\n        />\n        <p />\n        <Button onClick={importCSV} type=\"primary\">Upload a CSV File</Button>\n      </div>\n      {csvData ?\n        <TablePortfolio data={csvData} />\n        :\n        null\n      }\n    </div>\n  );\n};\n\nexport default Upload;","import React, { useEffect, useState } from 'react'\nimport { getUserPortfolios, getPortfolioDetails, portfolioDelete } from '../services/portfolio'\nimport { List, Button, Skeleton } from 'antd';\n\nfunction PortfoliosList() {\n  const [initLoading, setInitLoading] = useState(true)\n  // const [data, setData] = useState([])\n  const [list, setList] = useState([])\n\n  useEffect(() => {\n\n    /// Hook for retrieving all portfolios data from DB for the current user \n    async function getPortfolios() {\n      setInitLoading(false)\n      const { data } = await getUserPortfolios()\n      console.log(data)\n      // setData(data)\n      setList(data)\n    }\n    getPortfolios()\n  }, [])\n\n  const handleEdit = async (id) => {\n    console.log(id)\n    const { data } = await getPortfolioDetails(id)\n    sessionStorage.setItem('csvFile', JSON.stringify(data))\n    window.location.reload()\n    console.log(data)\n  }\n\n  const handleDelete = async (item) => {\n    console.log(item)\n    await portfolioDelete(item._id)\n    const index = list.indexOf(item)\n    const newData = list.filter((data, idx) => idx !== index)\n    setList(newData)\n  }\n\n  return (\n    <div>\n      <List\n        className=\"demo-loadmore-list\"\n        loading={initLoading}\n        itemLayout=\"horizontal\"\n        // loadMore={loadMore}\n        dataSource={list}\n        renderItem={item => (\n          <List.Item\n            actions={[<Button type=\"link\" key=\"list-loadmore-edit\" onClick={() => handleEdit(item._id)} >edit</Button>,\n            <Button type=\"link\" key=\"list-loadmore-more\" onClick={() => handleDelete(item)}>delete</Button>]}\n          >\n            <Skeleton avatar title={false} loading={item.loading} active>\n              <List.Item.Meta\n                title={<p>{item.fileName}</p>}\n              />\n\n            </Skeleton>\n          </List.Item>\n        )}\n      />\n\n    </div>\n  )\n}\n\nexport default PortfoliosList\n","import React, { useState } from 'react';\nimport { Modal, Button } from 'antd';\nimport PortfoliosList from './PortfoliosList';\n\n\n//// Porfolio Modal to contain all users portfolios stored in the DB\nfunction AllPortfolios() {\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const showModal = () => {\n      setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  //// Renders component\n  return (\n    <div>\n      <Button type=\"primary\" onClick={showModal}>\n        View All Portfolios\n      </Button>\n      <Modal title=\"All portfolios\"\n      visible={isModalVisible} \n      onOk={handleOk} \n      onCancel={handleCancel}>\n        <PortfoliosList />\n      </Modal>\n    </div>\n  )\n}\n\nexport default AllPortfolios\n","import React from 'react'\nimport { Layout, Menu } from 'antd';\nimport {\n  LogoutOutlined,\n} from '@ant-design/icons';\n\nimport { useContextData } from '../hooks/context'\nimport { logoutFn } from '../services/index'\n\nconst { Sider } = Layout;\n\nfunction SiderMenu() {\n\n  const { logout } = useContextData()\n\n  async function handleLogout() {\n    await logoutFn()\n    sessionStorage.clear()\n    logout()\n  }\n\n  return (\n    <Sider width={200} className=\"site-layout-background\">\n      <Menu\n        mode=\"inline\"\n        style={{ height: '100%', borderRight: 0 }}\n      >\n        <Menu.Item key=\"1\" icon={<LogoutOutlined />} onClick={handleLogout}>\n          Logout\n        </Menu.Item>\n      </Menu>\n    </Sider>\n  )\n\n}\n\nexport default SiderMenu","import React from 'react'\nimport { Layout, Row } from 'antd';\nimport SiderMenu from './Sider'\n\nconst { Header, Content} = Layout;\n\nfunction LayoutApp({children}) {\n\n    return (\n      <>\n      \n      <Layout style={{ minHeight: '100vh' }}>\n      <Header className=\"site-layout-background\" style={{ padding: 0}}>\n      </Header>\n      <Layout className=\"site-layout\">\n      <SiderMenu/>\n        <Row justify=\"end\" align=\"middle\" style>\n        </Row>\n        <Content style={{ margin: '0 16px', textAlign:\"left\" }}>\n          <div className=\"site-layout-background\" \n          style={{ padding: 24, minHeight: 360, backgroundColor:\"white\" }}>\n            {children}\n          </div>\n        </Content>\n      </Layout>\n    </Layout>\n      </>\n    )\n}\n\n\nexport default LayoutApp\n","import React from 'react'\nimport { Col, Row, Typography } from 'antd'\nimport { useContextData } from '../hooks/context';\nimport { Redirect } from 'react-router-dom'\nimport Upload from '../components/Upload';\nimport AllPortfolios from '../components/AllPortfolios';\nimport LayoutApp from '../components/Layout';\nconst { Title } = Typography\nfunction Home() {\n    const { user } = useContextData()\n\n    return user ? (\n        <div>\n            <LayoutApp>\n                <Row>\n                    <Col sm={24}>\n\n                        <Title level={1}> Welcome to the Portfolio Viewer App</Title>\n                        <Title level={2}> Please upload a portfolio as a CSV file, look at your previous portfolios or choose one from the sider to view the detail and be able to edit</Title>\n                        <AllPortfolios />\n                        <br />\n                        <Upload />\n                        <br />\n                    </Col>\n                </Row>\n            </LayoutApp>\n\n        </div>\n    )\n        : <Redirect to={\"/\"} />\n}\n\nexport default Home\n","import React from 'react';\n\nfunction NotFound() {\n  return (\n    <div>\n      <h2>Not found</h2>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React from 'react'\nimport { Col, Row, Input, Form, Button, message, Typography } from 'antd'\nimport { loginFn } from '../services/index'\nimport { useContextData } from '../hooks/context'\nimport { Redirect } from 'react-router'\n\nconst errormessage = (errmessage) => {\n  message.error(errmessage)\n}\n\nconst { Title } = Typography\n\n\nfunction Login({ history }) {\n\n  const [form] = Form.useForm()\n  const { login, user } = useContextData()\n\n\n  async function handleSubmit(userInput) {\n\n    console.log(userInput)\n    loginFn(userInput)\n      .then(data => {\n        login({ data })\n        history.push('/home')\n      })\n      .catch(err => {\n        console.log(err)\n        errormessage(\"Wrong Credentials\")\n      })\n\n  }\n  return user ?\n    <Redirect to={\"/home\"} />\n    :\n    (\n      <div>\n        <Row align=\"middle\" justify=\"space-around\">\n          <Col xs={0} sm={0} md={24} flex=\"center\">\n            <div style={{ marginTop: \"20vh\" }}></div>\n          </Col>\n        </Row>\n        <Row align=\"middle\" justify=\"space-around\">\n          <Col flex=\"center\">\n            <Title level={1}>Welcome to the Portfolio Viewer App</Title>\n            <br />\n            <Title level={2}>Please login to enter</Title>\n            <Form layout=\"vertical\" form={form} onFinish={handleSubmit}>\n              <Form.Item\n                name='email'\n                label=\"Email:\"\n                rules={[{ required: true, type: 'email', message: 'Please input your email' }]}>\n                <Input />\n              </Form.Item>\n              <Form.Item\n                name='password'\n                label=\"Password:\"\n                rules={[{ required: true, message: 'Password is required' }]}>\n                <Input.Password />\n              </Form.Item>\n              <Button type=\"primary\" block htmlType=\"submit\">\n                Login\n              </Button>\n\n            </Form>\n          </Col>\n\n        </Row>\n\n      </div>\n      // </div>\n    )\n}\nexport default Login\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport NotFound from './components/404/NotFound.js';\nimport Login from './pages/Login';\n\nconst Router = () => (\n  \n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={Login} />\n        <Route exact path=\"/home\" component={Home} />\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Router from './Router';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\nimport { DataCtxProvider } from './hooks/context'\n\nReactDOM.render(\n    <DataCtxProvider>\n        <Router />\n    </DataCtxProvider>\n    , document.getElementById('root'));\n    \n\nserviceWorker.unregister();\n"],"sourceRoot":""}